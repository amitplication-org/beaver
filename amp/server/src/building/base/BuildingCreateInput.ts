/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumBuildingBuildingType } from "./EnumBuildingBuildingType";
import { IsEnum, ValidateNested, IsOptional, IsString } from "class-validator";
import { BulletinBoardWhereUniqueInput } from "../../bulletinBoard/base/BulletinBoardWhereUniqueInput";
import { Type } from "class-transformer";
import { CityWhereUniqueInput } from "../../city/base/CityWhereUniqueInput";
import { CompanyCreateNestedManyWithoutBuildingsInput } from "./CompanyCreateNestedManyWithoutBuildingsInput";
import { MessageCreateNestedManyWithoutBuildingsInput } from "./MessageCreateNestedManyWithoutBuildingsInput";
import { PollCreateNestedManyWithoutBuildingsInput } from "./PollCreateNestedManyWithoutBuildingsInput";
import { ReportCreateNestedManyWithoutBuildingsInput } from "./ReportCreateNestedManyWithoutBuildingsInput";
@InputType()
class BuildingCreateInput {
  @ApiProperty({
    required: true,
    enum: EnumBuildingBuildingType,
  })
  @IsEnum(EnumBuildingBuildingType)
  @Field(() => EnumBuildingBuildingType)
  buildingType!: "Residence" | "Office";

  @ApiProperty({
    required: false,
    type: () => BulletinBoardWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BulletinBoardWhereUniqueInput)
  @IsOptional()
  @Field(() => BulletinBoardWhereUniqueInput, {
    nullable: true,
  })
  bulletinBoard?: BulletinBoardWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CityWhereUniqueInput)
  @IsOptional()
  @Field(() => CityWhereUniqueInput, {
    nullable: true,
  })
  city?: CityWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: () => CompanyCreateNestedManyWithoutBuildingsInput,
  })
  @ValidateNested()
  @Type(() => CompanyCreateNestedManyWithoutBuildingsInput)
  @IsOptional()
  @Field(() => CompanyCreateNestedManyWithoutBuildingsInput, {
    nullable: true,
  })
  companies?: CompanyCreateNestedManyWithoutBuildingsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  loacation!: string;

  @ApiProperty({
    required: false,
    type: () => MessageCreateNestedManyWithoutBuildingsInput,
  })
  @ValidateNested()
  @Type(() => MessageCreateNestedManyWithoutBuildingsInput)
  @IsOptional()
  @Field(() => MessageCreateNestedManyWithoutBuildingsInput, {
    nullable: true,
  })
  message?: MessageCreateNestedManyWithoutBuildingsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => PollCreateNestedManyWithoutBuildingsInput,
  })
  @ValidateNested()
  @Type(() => PollCreateNestedManyWithoutBuildingsInput)
  @IsOptional()
  @Field(() => PollCreateNestedManyWithoutBuildingsInput, {
    nullable: true,
  })
  poll?: PollCreateNestedManyWithoutBuildingsInput;

  @ApiProperty({
    required: false,
    type: () => ReportCreateNestedManyWithoutBuildingsInput,
  })
  @ValidateNested()
  @Type(() => ReportCreateNestedManyWithoutBuildingsInput)
  @IsOptional()
  @Field(() => ReportCreateNestedManyWithoutBuildingsInput, {
    nullable: true,
  })
  reports?: ReportCreateNestedManyWithoutBuildingsInput;
}
export { BuildingCreateInput };
