/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumBuildingBuildingType } from "./EnumBuildingBuildingType";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { BulletinBoardWhereUniqueInput } from "../../bulletinBoard/base/BulletinBoardWhereUniqueInput";
import { Type } from "class-transformer";
import { CityWhereUniqueInput } from "../../city/base/CityWhereUniqueInput";
import { CompanyListRelationFilter } from "../../company/base/CompanyListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { MessageListRelationFilter } from "../../message/base/MessageListRelationFilter";
import { PollListRelationFilter } from "../../poll/base/PollListRelationFilter";
import { ReportListRelationFilter } from "../../report/base/ReportListRelationFilter";
@InputType()
class BuildingWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumBuildingBuildingType,
  })
  @IsEnum(EnumBuildingBuildingType)
  @IsOptional()
  @Field(() => EnumBuildingBuildingType, {
    nullable: true,
  })
  buildingType?: "Residence" | "Office";

  @ApiProperty({
    required: false,
    type: () => BulletinBoardWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BulletinBoardWhereUniqueInput)
  @IsOptional()
  @Field(() => BulletinBoardWhereUniqueInput, {
    nullable: true,
  })
  bulletinBoard?: BulletinBoardWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CityWhereUniqueInput)
  @IsOptional()
  @Field(() => CityWhereUniqueInput, {
    nullable: true,
  })
  city?: CityWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CompanyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CompanyListRelationFilter)
  @IsOptional()
  @Field(() => CompanyListRelationFilter, {
    nullable: true,
  })
  companies?: CompanyListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  loacation?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MessageListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MessageListRelationFilter)
  @IsOptional()
  @Field(() => MessageListRelationFilter, {
    nullable: true,
  })
  message?: MessageListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => PollListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PollListRelationFilter)
  @IsOptional()
  @Field(() => PollListRelationFilter, {
    nullable: true,
  })
  poll?: PollListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReportListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReportListRelationFilter)
  @IsOptional()
  @Field(() => ReportListRelationFilter, {
    nullable: true,
  })
  reports?: ReportListRelationFilter;
}
export { BuildingWhereInput };
