/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumBuildingBuildingType } from "./EnumBuildingBuildingType";
import {
  IsEnum,
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
} from "class-validator";
import { BulletinBoard } from "../../bulletinBoard/base/BulletinBoard";
import { Type } from "class-transformer";
import { City } from "../../city/base/City";
import { Company } from "../../company/base/Company";
import { Message } from "../../message/base/Message";
import { Poll } from "../../poll/base/Poll";
import { Report } from "../../report/base/Report";
@ObjectType()
class Building {
  @ApiProperty({
    required: true,
    enum: EnumBuildingBuildingType,
  })
  @IsEnum(EnumBuildingBuildingType)
  @Field(() => EnumBuildingBuildingType, {
    nullable: true,
  })
  buildingType?: "Residence" | "Office";

  @ApiProperty({
    required: false,
    type: () => BulletinBoard,
  })
  @ValidateNested()
  @Type(() => BulletinBoard)
  @IsOptional()
  bulletinBoard?: BulletinBoard | null;

  @ApiProperty({
    required: false,
    type: () => City,
  })
  @ValidateNested()
  @Type(() => City)
  @IsOptional()
  city?: City | null;

  @ApiProperty({
    required: true,
    type: () => [Company],
  })
  @ValidateNested()
  @Type(() => Company)
  @IsOptional()
  companies?: Array<Company>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  loacation!: string;

  @ApiProperty({
    required: false,
    type: () => [Message],
  })
  @ValidateNested()
  @Type(() => Message)
  @IsOptional()
  message?: Array<Message>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => [Poll],
  })
  @ValidateNested()
  @Type(() => Poll)
  @IsOptional()
  poll?: Array<Poll>;

  @ApiProperty({
    required: false,
    type: () => [Report],
  })
  @ValidateNested()
  @Type(() => Report)
  @IsOptional()
  reports?: Array<Report>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Building };
