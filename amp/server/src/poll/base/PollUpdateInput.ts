/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BuildingUpdateManyWithoutPollsInput } from "./BuildingUpdateManyWithoutPollsInput";
import {
  ValidateNested,
  IsOptional,
  IsJSON,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumPollPollType } from "./EnumPollPollType";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
@InputType()
class PollUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BuildingUpdateManyWithoutPollsInput,
  })
  @ValidateNested()
  @Type(() => BuildingUpdateManyWithoutPollsInput)
  @IsOptional()
  @Field(() => BuildingUpdateManyWithoutPollsInput, {
    nullable: true,
  })
  buildings?: BuildingUpdateManyWithoutPollsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  content?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    enum: EnumPollPollType,
  })
  @IsEnum(EnumPollPollType)
  @IsOptional()
  @Field(() => EnumPollPollType, {
    nullable: true,
  })
  pollType?: "General" | "Maintenance" | "Committee";

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}
export { PollUpdateInput };
