/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BuildingUpdateManyWithoutMessagesInput } from "./BuildingUpdateManyWithoutMessagesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { BulletinBoardWhereUniqueInput } from "../../bulletinBoard/base/BulletinBoardWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
@InputType()
class MessageUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BuildingUpdateManyWithoutMessagesInput,
  })
  @ValidateNested()
  @Type(() => BuildingUpdateManyWithoutMessagesInput)
  @IsOptional()
  @Field(() => BuildingUpdateManyWithoutMessagesInput, {
    nullable: true,
  })
  buildings?: BuildingUpdateManyWithoutMessagesInput;

  @ApiProperty({
    required: false,
    type: () => BulletinBoardWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BulletinBoardWhereUniqueInput)
  @IsOptional()
  @Field(() => BulletinBoardWhereUniqueInput, {
    nullable: true,
  })
  bulletinBoard?: BulletinBoardWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  content?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}
export { MessageUpdateInput };
